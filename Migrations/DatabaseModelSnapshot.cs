// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenSkinsApi.Infrastructure.Persistence;

#nullable disable

namespace OpenSkinsApi.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("owners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae72c8ce-fdbb-4eda-88a2-fa7f250c471b"),
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 113, DateTimeKind.Utc).AddTicks(7760),
                            Email = "johndoe@example.com"
                        });
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Purchase", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("owner_id");

                    b.Property<Guid>("SkinId")
                        .HasColumnType("char(36)")
                        .HasColumnName("skin_id");

                    b.Property<int>("Color")
                        .HasColumnType("int")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id", "OwnerId", "SkinId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SkinId");

                    b.ToTable("purchases", (string)null);
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_available");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("skins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ebcb0df-4c44-400c-a462-d72373afb22a"),
                            Color = "Yellow",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6560),
                            IsAvailable = false,
                            Name = "Skin1",
                            Price = 19.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("d87ad62e-ca2c-49e0-9168-a07b84f59593"),
                            Color = "Green",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6570),
                            IsAvailable = true,
                            Name = "Skin2",
                            Price = 9.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("4c462570-c196-46f2-a1d7-e1fd4b522ed9"),
                            Color = "Purple",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6580),
                            IsAvailable = true,
                            Name = "Skin3",
                            Price = 15.99m,
                            Type = "Epic"
                        },
                        new
                        {
                            Id = new Guid("101f3b98-cb0d-4929-a2ac-a5e8afd921b3"),
                            Color = "Pink",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6580),
                            IsAvailable = true,
                            Name = "Skin4",
                            Price = 29.99m,
                            Type = "Legendary"
                        },
                        new
                        {
                            Id = new Guid("3a36d8fb-5d1c-4e6d-9b51-4d59e029c181"),
                            Color = "Blue",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6590),
                            IsAvailable = true,
                            Name = "Skin5",
                            Price = 24.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("2794c8d0-9665-40fc-a24f-c9b534b38401"),
                            Color = "Brown",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6590),
                            IsAvailable = false,
                            Name = "Skin6",
                            Price = 12.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("80762e49-265b-4466-9648-a6f6f0b5f3cf"),
                            Color = "Red",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6600),
                            IsAvailable = true,
                            Name = "Skin7",
                            Price = 17.99m,
                            Type = "Epic"
                        },
                        new
                        {
                            Id = new Guid("5cf6e618-ea7d-4aa8-b051-c5b7d6c11191"),
                            Color = "Orange",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6600),
                            IsAvailable = true,
                            Name = "Skin8",
                            Price = 14.99m,
                            Type = "Legendary"
                        },
                        new
                        {
                            Id = new Guid("65a9ce90-9430-4988-aa89-a4308d3291c5"),
                            Color = "Yellow",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6610),
                            IsAvailable = false,
                            Name = "Skin9",
                            Price = 22.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("bd6b1eef-4c5e-4672-852c-394e6849c518"),
                            Color = "White",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6610),
                            IsAvailable = true,
                            Name = "Skin10",
                            Price = 19.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("87af4649-9dd4-414b-990f-211083cfa162"),
                            Color = "Green",
                            CreatedOn = new DateTime(2023, 10, 26, 22, 56, 24, 114, DateTimeKind.Utc).AddTicks(6620),
                            IsAvailable = false,
                            Name = "Skin11",
                            Price = 24.99m,
                            Type = "Epic"
                        });
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Purchase", b =>
                {
                    b.HasOne("OpenSkinsApi.Modules.Skins.Domain.Entities.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", "Skin")
                        .WithMany("Purchases")
                        .HasForeignKey("SkinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Skin");
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
