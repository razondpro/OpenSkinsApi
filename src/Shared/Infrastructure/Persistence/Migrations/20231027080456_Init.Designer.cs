// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenSkinsApi.Infrastructure.Persistence;

#nullable disable

namespace OpenSkinsApi.Shared.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20231027080456_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("owners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("65bfa21c-43f4-4430-80b2-97d82d40a0d5"),
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 440, DateTimeKind.Utc).AddTicks(9000),
                            Email = "johndoe@example.com"
                        });
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Purchase", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("owner_id");

                    b.Property<Guid>("SkinId")
                        .HasColumnType("char(36)")
                        .HasColumnName("skin_id");

                    b.Property<int>("Color")
                        .HasColumnType("int")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id", "OwnerId", "SkinId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SkinId");

                    b.ToTable("purchases", (string)null);
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_available");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("skins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe295ef3-7e62-4c0a-aa93-70610a940162"),
                            Color = "Yellow",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7690),
                            IsAvailable = false,
                            Name = "Skin1",
                            Price = 19.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("d3cc6d9f-1bbb-4b22-b1ed-93bbb4b74f64"),
                            Color = "Green",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7690),
                            IsAvailable = true,
                            Name = "Skin2",
                            Price = 9.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("5994e1d8-d643-4eb1-8f51-8bf1caa3edca"),
                            Color = "Purple",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7700),
                            IsAvailable = true,
                            Name = "Skin3",
                            Price = 15.99m,
                            Type = "Epic"
                        },
                        new
                        {
                            Id = new Guid("ca99ed0c-9c71-47c5-8d28-1e26456553dd"),
                            Color = "Pink",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7700),
                            IsAvailable = true,
                            Name = "Skin4",
                            Price = 29.99m,
                            Type = "Legendary"
                        },
                        new
                        {
                            Id = new Guid("6f8d1cf3-8538-4ae9-9264-a9f5af66fe88"),
                            Color = "Blue",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7710),
                            IsAvailable = true,
                            Name = "Skin5",
                            Price = 24.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("93d79334-fcae-4344-9b61-68a5f60bc737"),
                            Color = "Brown",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7710),
                            IsAvailable = false,
                            Name = "Skin6",
                            Price = 12.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("49e7fdf6-90bf-41fb-9bb2-3d8cfb0f9f5e"),
                            Color = "Red",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7720),
                            IsAvailable = true,
                            Name = "Skin7",
                            Price = 17.99m,
                            Type = "Epic"
                        },
                        new
                        {
                            Id = new Guid("241a1ca9-f26e-40f6-8ff7-5c039dc07874"),
                            Color = "Orange",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7720),
                            IsAvailable = true,
                            Name = "Skin8",
                            Price = 14.99m,
                            Type = "Legendary"
                        },
                        new
                        {
                            Id = new Guid("d7e90c6c-c9f4-481c-8f1e-b634b1069594"),
                            Color = "Yellow",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7720),
                            IsAvailable = false,
                            Name = "Skin9",
                            Price = 22.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("e477e5f3-ddfa-4213-92b8-21a191632810"),
                            Color = "White",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7730),
                            IsAvailable = true,
                            Name = "Skin10",
                            Price = 19.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("0e238b35-a0ce-4760-ac73-a41f9b07ab59"),
                            Color = "Green",
                            CreatedOn = new DateTime(2023, 10, 27, 8, 4, 56, 441, DateTimeKind.Utc).AddTicks(7730),
                            IsAvailable = false,
                            Name = "Skin11",
                            Price = 24.99m,
                            Type = "Epic"
                        });
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Purchase", b =>
                {
                    b.HasOne("OpenSkinsApi.Modules.Skins.Domain.Entities.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", "Skin")
                        .WithMany("Purchases")
                        .HasForeignKey("SkinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Skin");
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
