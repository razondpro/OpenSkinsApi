// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenSkinsApi.Infrastructure.Persistence;

#nullable disable

namespace OpenSkinsApi.src.Shared.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20231112090509_Outbox")]
    partial class Outbox
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OpenSkinsApi.Infrastructure.Persistence.Core.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("data");

                    b.Property<string>("Error")
                        .HasColumnType("longtext")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("occurred_on");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("processed_on");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.ToTable("outbox_messages", (string)null);
                });

            modelBuilder.Entity("OpenSkinsApi.Infrastructure.Persistence.Core.Outbox.OutboxMessageConsumer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnName("event_id");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("event_type");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("EventId", "EventType");

                    b.ToTable("outbox_messages_consumer", (string)null);
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("owners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1bbe4b61-0615-40a2-8ca4-25ecb4522523"),
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 826, DateTimeKind.Utc).AddTicks(6280),
                            Email = "johndoe@example.com"
                        });
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Purchase", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("owner_id");

                    b.Property<Guid>("SkinId")
                        .HasColumnType("char(36)")
                        .HasColumnName("skin_id");

                    b.Property<int>("Color")
                        .HasColumnType("int")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.HasKey("Id", "OwnerId", "SkinId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SkinId");

                    b.ToTable("purchases", (string)null);
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_available");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("skins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b71e24f8-c5e2-4e83-9375-22bcf5949809"),
                            Color = "Yellow",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5120),
                            IsAvailable = false,
                            Name = "Skin1",
                            Price = 19.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("abd88146-1d3d-464f-9e6d-661be69d808e"),
                            Color = "Green",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5130),
                            IsAvailable = true,
                            Name = "Skin2",
                            Price = 9.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("f7231d85-6c48-4ba3-9870-40e57dcc8447"),
                            Color = "Purple",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5130),
                            IsAvailable = true,
                            Name = "Skin3",
                            Price = 15.99m,
                            Type = "Epic"
                        },
                        new
                        {
                            Id = new Guid("7645ec51-bafe-474f-99c6-8f62cb7fa323"),
                            Color = "Pink",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5140),
                            IsAvailable = true,
                            Name = "Skin4",
                            Price = 29.99m,
                            Type = "Legendary"
                        },
                        new
                        {
                            Id = new Guid("4ecb4880-9310-47f6-9ca3-2c7870e66920"),
                            Color = "Blue",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5140),
                            IsAvailable = true,
                            Name = "Skin5",
                            Price = 24.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("2e75a432-bcd4-4c31-90e9-732311de896a"),
                            Color = "Brown",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5150),
                            IsAvailable = false,
                            Name = "Skin6",
                            Price = 12.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("7cec5ae0-4124-4c55-9e55-4c2035776ddb"),
                            Color = "Red",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5150),
                            IsAvailable = true,
                            Name = "Skin7",
                            Price = 17.99m,
                            Type = "Epic"
                        },
                        new
                        {
                            Id = new Guid("da44cc7a-ac85-46e7-b373-4c626d4cd05a"),
                            Color = "Orange",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5150),
                            IsAvailable = true,
                            Name = "Skin8",
                            Price = 14.99m,
                            Type = "Legendary"
                        },
                        new
                        {
                            Id = new Guid("d95118bf-b443-49b7-9cc6-923d458903a9"),
                            Color = "Yellow",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5160),
                            IsAvailable = false,
                            Name = "Skin9",
                            Price = 22.99m,
                            Type = "Normal"
                        },
                        new
                        {
                            Id = new Guid("3b977d8a-a8df-4133-958c-4b82d968b9b8"),
                            Color = "White",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5160),
                            IsAvailable = true,
                            Name = "Skin10",
                            Price = 19.99m,
                            Type = "Rare"
                        },
                        new
                        {
                            Id = new Guid("8b463593-dd0e-4b2c-a93b-8c6ec7243c85"),
                            Color = "Green",
                            CreatedOn = new DateTime(2023, 11, 12, 9, 5, 9, 827, DateTimeKind.Utc).AddTicks(5170),
                            IsAvailable = false,
                            Name = "Skin11",
                            Price = 24.99m,
                            Type = "Epic"
                        });
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Purchase", b =>
                {
                    b.HasOne("OpenSkinsApi.Modules.Skins.Domain.Entities.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", "Skin")
                        .WithMany("Purchases")
                        .HasForeignKey("SkinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Skin");
                });

            modelBuilder.Entity("OpenSkinsApi.Modules.Skins.Domain.Entities.Skin", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
