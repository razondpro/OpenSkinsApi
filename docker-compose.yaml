version: "3.8"

services:
  mysqldb:
    image: mysql:8.0
    container_name: mysqldb-container
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: skins
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - openapi_network

  skins-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5108:80"
    depends_on:
      mysqldb:
        condition: service_healthy
    container_name: skins-app-container
    environment:
      MYSQL_HOST: mysqldb
      MYSQL_PORT: "3306"
      MYSQL_USER: root
      MYSQL_PASSWORD: root_password
      MYSQL_DATABASE: skins
      MYSQL_MAX_RETRY_COUNT: "3"
      MYSQL_COMMAND_TIMEOUT: "30"
      MYSQL_ENABLE_DETAILED_ERRORS: "true"
      MYSQL_ENABLE_SENSITIVE_DATA_LOGGING: "false"
      ASPNETCORE_ENVIRONMENT: Development
      KAFKA_BOOTSTRAP_SERVERS: broker:29092
      KAFKA_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      JWT_ISSUER: "khubd"
      JWT_AUDIENCE: "khubd"
      JWT_SECRET: "ThisIsASecretKey"
      JWT_ACCESS_TOKEN_EXPIRATION: "10"
      JWT_REFRESH_TOKEN_EXPIRATION: "60"
    networks:
      - openapi_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - openapi_network

  broker:
    image: confluentinc/cp-server:latest
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - openapi_network

  kafka-setup:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - broker
    command:
      - bash
      - -c
      - |
        echo "Waiting for Kafka to come up..."
        until kafka-topics --bootstrap-server broker:29092 --list > /dev/null; do sleep 1; done
        echo "Creating topic..."
        kafka-topics --bootstrap-server broker:29092 --create --topic auth --partitions 1 --replication-factor 1
    networks:
      - openapi_network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    volumes:
      - schema-registry-data:/var/lib/schema-registry
    networks:
      - openapi_network

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: "connect:8083"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - openapi_network

volumes:
  mysql_data:
  kafka-data:
  schema-registry-data:

networks:
  openapi_network:
